from datetime import datetime
import re

from aiogram import flags
from aiogram.types import Message

from config import bot_name
from keyboard.generate import show_city_kb, city_water_kb, city_electro_kb, city_road_kb, city_build_kb, city_house_kb
from utils.city.city import City
from utils.main.cash import to_str
from utils.main.db import sql
from filters.users import flood_handler
from utils.main.users import User
from utils.city.buildings import water_build, energy_build, house_build
from utils.quests.main import QuestUser

numbers_emoji = ['0Ô∏è‚É£', '1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£']


def count_build(counter: list = None):
    count = 0
    for index, builds in enumerate(counter, start=1):
        count += counter[f"{index}"]["count_build"]

    return count


def count_build_get(counter: list = None):
    count = 0
    for index, item in enumerate(counter, start=1):
        build = water_build[index]
        count += counter[f"{index}"]["count_build"] * build['get']
    return count


@flags.throttling_key('default')
async def city_info_handler(message: Message):
    user = User(user=message.from_user)
    text = f'{user.link} ,–ø–æ—Å—Ç—Ä–æ–π—Ç–µ –≥–æ—Ä–æ–¥ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ–≥—Ä–æ–º–Ω—ã–µ –¥–µ–Ω—å–≥–∏!\n' \
           'üèô –ì–æ—Ä–æ–¥ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—à–µ–º –≥–æ—Ä–æ–¥–µ\n' \
           '‚öí –ì–æ—Ä–æ–¥ –æ—Å–Ω–æ–≤–∞—Ç—å - –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥–æ—Ä–æ–¥\n' \
           '‚úíÔ∏è –ì–æ—Ä–æ–¥ –Ω–∏–∫ [–Ω–∞–∑–≤–∞–Ω–∏–µ]\n' \
           'üèò –ì–æ—Ä–æ–¥ –∑–¥–∞–Ω–∏—è - —Å–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π –≤ –≥–æ—Ä–æ–¥–µ\n' \
           'üèó –ì–æ—Ä–æ–¥ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å [–≤–æ–¥—É\—ç–ª–µ–∫—Ç—Ä–æ\–¥–æ–º] - –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∑–¥–∞–Ω–∏–µ\n' \
           'üöô –ì–æ—Ä–æ–¥ –¥–æ—Ä–æ–≥–∞ [–º–µ—Ç—Ä—ã] - –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –¥–æ—Ä–æ–≥–∏\n' \
           'üí∏ –ì–æ—Ä–æ–¥ –Ω–∞–ª–æ–≥ [1-99] - –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ª–æ–≥–∏\n' \
           'üí∞ –ì–æ—Ä–æ–¥ –∫–∞–∑–Ω–∞ - –∫–∞–∑–Ω–∞ –±–∞–Ω–∫–∞ \n'
    return await message.reply(text, disable_web_page_preview=True)


@flags.throttling_key('default')
async def city_handler(message: Message):
    flood = await flood_handler(message)
    if flood:
        arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[
            0].lower() else message.text.split()[2:]
        try:
            city = City(user_id=message.from_user.id)
            city.edit('last_online', datetime.now().strftime('%d-%m-%Y %H:%M:%S'))
        except:
            city = None
            if len(arg) < 1 or arg[0].lower() != '–æ—Å–Ω–æ–≤–∞—Ç—å':
                return await city_info_handler(message)
        user = User(user=message.from_user)
        if len(arg) == 0:
            count_house = count_build(city.house)
            count_energy = count_build_get(city.energy)
            count_water = count_build_get(city.water)
            builds = city.get_count_build()
            happynes = city.happynes
            problems = ''
            notification = "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n‚ö†Ô∏è –í –≥–æ—Ä–æ–¥–µ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
            if count_energy < count_house * 165:
                happynes -= 20
                problems += '‚ö°Ô∏è –†–∞—Å—Ö–æ–¥—ã —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏ –ø—Ä–µ–≤—ã—à–∞—é—Ç –µ—ë –≤—ã—Ä–∞–±–æ—Ç–∫–∏!\n' \
                            '‚ûñ –ü–æ—Å—Ç—Ä–æ–π—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏—é\n'
            if count_water < count_house * 145:
                happynes -= 20
                problems += 'üí¶ –†–∞—Å—Ö–æ–¥—ã –≤–æ–¥—ã –ø—Ä–µ–≤—ã—à–∞—é—Ç –µ—ë –¥–æ–±—ã—á—É!\n' \
                            '‚ûñ –ü–æ—Å—Ç—Ä–æ–π—Ç–µ –≤–æ–¥–æ–Ω–∞–ø–æ—Ä–Ω—É—é –±–∞—à–Ω—é\n'
            text = f'<b>{user.link}</b>, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—à–µ–º –≥–æ—Ä–æ–¥–µ:\n\n' \
                   f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' \
                   f'üèô –ù–∞–∑–≤–∞–Ω–∏–µ: <b>{city.name}</b>\n\n' \
                   f'üí∞ –ö–∞–∑–Ω–∞ –≥–æ—Ä–æ–¥–∞: {to_str(city.kazna)}\n' \
                   f'üë• –ñ–∏—Ç–µ–ª–µ–π: {city.citizens}\n' \
                   f'{"ü§¨" if happynes < 30 else "üôÇ"} –°—á–∞—Å—Ç—å–µ: {round(happynes, 2)}%\n' \
                   f'üë®üèª‚Äçüîß –†–∞–±–æ—Ç–∞—é—Ç: {city.workers}\n' \
                   f'üí∏ –ù–∞–ª–æ–≥–∏: {city.taxes}%\n' \
                   f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' \
                   f'üíß –í–æ–¥–∞: {count_water}/{count_house * 145} –º¬≥/—Å—É—Ç–∫–∏\n' \
                   f'‚ö° –≠–Ω–µ—Ä–≥–∏—è: {count_energy}/{count_house * 165} –ú–í—Ç\n' \
                   f'üöô –î–æ—Ä–æ–≥–∏: {city.road}\n' \
                   f'{problems if problems == "" else notification}\n' \
                   f'{problems}' \
                   f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' \
                   f'üèó –ó–¥–∞–Ω–∏–π: {builds}'

            await message.reply(text=text, disable_web_page_preview=True, reply_markup=city_build_kb.as_markup())
            result = QuestUser(user_id=user.id).check_progres(quest_ids=[12, 13, 14, 15],
                                                              progresses=[city.citizens, count_house,
                                                                          count_build(city.energy),
                                                                          count_build(city.water)])
            if result != '':
                await message.answer(text=result.format(user=user.link), disable_web_page_preview=True)
            return
        elif arg[0].lower() in ['–∏–Ω—Ñ–æ']:
            return await city_info_handler(message)

        elif arg[0].lower() == '–æ—Å–Ω–æ–≤–∞—Ç—å':
            if city:
                return await message.reply('‚ùó –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≥–æ—Ä–æ–¥, –º–æ–∂–Ω–æ –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ 1.',
                                           reply_markup=show_city_kb.as_markup())
            try:
                name = arg[1]
                args = re.sub('''[@"'%<>üíéüë®‚Äçüî¨üåü‚ö°üëÆ‚Äç‚ôÇ‚û™üëæü•≤‚õèüòéüëëüíñüêüüçÜüòàüèøüê•üë∂üèøüá∑üá∫üá∫üá¶]''', '', name)
                if len(args) > 16 or len(args) < 4:
                    return await message.reply('‚ùå –û—à–∏–±–∫–∞! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è: 16, –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: 6\n'
                                               '–¢–∞–∫–∂–µ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –∞–Ω–≥–ª. –∏ —Ä—É—Å. –±—É–∫–≤—ã!')
            except:
                return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–≥–æ—Ä–æ–¥ –æ—Å–Ω–æ–≤–∞—Ç—å (–Ω–∞–∑–≤)</code>',
                                           reply_markup=show_city_kb.as_markup())
            balance = sql.execute(f'SELECT balance FROM users WHERE id = {message.from_user.id}', False, True)[0][0]

            price = 100000000

            if balance < price:
                return await message.reply(
                    f'üí≤ –ù–∞ —Ä—É–∫–∞—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏, –Ω—É–∂–Ω–æ: {to_str(price)}')
            City.create(user_id=message.from_user.id, name=args)
            sql.execute(f'UPDATE users SET balance = balance - {price} WHERE id ='
                        f' {message.from_user.id}', True)
            return await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ –≥–æ—Ä–æ–¥  <b>{args}</b> –∑–∞'
                                       f' {to_str(price)}', reply_markup=show_city_kb.as_markup())

        elif arg[0].lower() == '–ø–æ—Å—Ç—Ä–æ–∏—Ç—å':
            if city:

                try:
                    name = arg[1].lower()
                except:
                    return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–≥–æ—Ä–æ–¥ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å (–Ω–∞–∑–≤)</code>',
                                               reply_markup=show_city_kb.as_markup())
                if name == '–≤–æ–¥—É':
                    try:
                        item_id = int(arg[2])
                    except:
                        text = f'{user.link}, –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∑–¥–∞–Ω–∏—è:\n\n'
                        for index, item in enumerate(water_build, start=1):
                            try:
                                build = water_build[index]
                                text += f"{index}. {build['name']}({to_str(build['price'])})\n"
                            except Exception as ex:
                                print(f'{item}: {ex}')
                        return await message.reply(
                            text + "\n‚ùî –í–≤–µ–¥–∏—Ç–µ ¬´–ì–æ—Ä–æ–¥ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≤–æ–¥—É [–Ω–æ–º–µ—Ä]¬ª –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ ",
                            reply_markup=city_water_kb.as_markup(), disable_web_page_preview=True)
                    try:
                        item = water_build[item_id]
                    except:
                        return await message.reply('üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞!')

                    price = (item['price'])
                    builds = city.get_count_build()

                    if builds * 2 > city.road:
                        return await message.reply(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —ç—Ç–æ –∑–¥–∞–Ω–∏–µ:\n'
                                                   'üöß –í –≥–æ—Ä–æ–¥–µ –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –¥–æ—Ä–æ–≥, —Ä—è–¥–æ–º —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —ç—Ç–æ –∑–¥–∞–Ω–∏–µ. ')
                    if user.balance < price:
                        return await message.reply(f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Ä—É–∫–∞—Ö, –Ω—É–∂–Ω–æ: {to_str(price)}')
                    user.edit('balance', user.balance - price)
                    count = city.water[f'{item_id}']['count_build'] + 1
                    sql.execute(
                        "UPDATE city SET water = jsonb_set(water, "
                        f"'{{{item_id}, count_build}}', "
                        f"'{count}')  WHERE owner={user.id}", commit=True)
                    await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ ¬´{item["name"]}¬ª '
                                        f'üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–¥–∞–Ω–∏–∏:\n'
                                        f'  üíß –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–∞–Ω–∏–π: {count} —à—Ç.\n'
                                        f'  üíß –î–æ–±—ã—á–∞ –≤–æ–¥—ã:{item["get"]} –º¬≥/—Å—É—Ç–∫–∏',
                                        reply_markup=city_water_kb.as_markup())
                    result = QuestUser(user_id=user.id).update_progres(quest_ids=15, add_to_progresses=1)
                    if result != '':
                        await message.answer(text=result.format(user=user.link), disable_web_page_preview=True)
                    return

                if name == '—ç–ª–µ–∫—Ç—Ä–æ':
                    try:
                        item_id = int(arg[2])
                    except:
                        text = f'{user.link}, –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∑–¥–∞–Ω–∏—è:\n\n'
                        for index, item in enumerate(energy_build, start=1):
                            try:
                                build = energy_build[index]
                                text += f"{index}. {build['name']}({to_str(build['price'])})\n"
                            except Exception as ex:
                                print(f'{item}: {ex}')
                        return await message.reply(
                            text + "\n‚ùî –í–≤–µ–¥–∏—Ç–µ ¬´–ì–æ—Ä–æ–¥ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ [–Ω–æ–º–µ—Ä]¬ª –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ ",
                            reply_markup=city_electro_kb.as_markup(), disable_web_page_preview=True)
                    try:
                        item = energy_build[item_id]
                    except:
                        return await message.reply('üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞!')

                    price = (item['price'])

                    if user.balance < price:
                        return await message.reply(f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Ä—É–∫–∞—Ö, –Ω—É–∂–Ω–æ: {to_str(price)}')
                    builds = city.get_count_build()

                    if builds * 2 > city.road:
                        return await message.reply(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —ç—Ç–æ –∑–¥–∞–Ω–∏–µ:\n'
                                                   'üöß –í –≥–æ—Ä–æ–¥–µ –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –¥–æ—Ä–æ–≥, —Ä—è–¥–æ–º —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —ç—Ç–æ –∑–¥–∞–Ω–∏–µ. ')
                    user.edit('balance', user.balance - price)
                    count = city.energy[f'{item_id}']['count_build'] + 1

                    sql.execute(
                        "UPDATE city SET energy = jsonb_set(energy, "
                        f"'{{{item_id}, count_build}}', "
                        f"'{count}') WHERE owner={user.id}", commit=True)
                    await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏–ª–∏  ¬´{item["name"]}¬ª'
                                        f'üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–¥–∞–Ω–∏–∏:\n'
                                        f' ‚ö° –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–∞–Ω–∏–π: {count} —à—Ç.\n'
                                        f'  –í—ã—Ä–∞–±–æ—Ç–∫–∞ —ç–Ω–µ—Ä–≥–∏–∏: {item["get"]} –ö–í—Ç',
                                        reply_markup=city_electro_kb.as_markup())
                    result = QuestUser(user_id=user.id).update_progres(quest_ids=14, add_to_progresses=1)
                    if result != '':
                        await message.answer(text=result.format(user=user.link), disable_web_page_preview=True)
                    return
                if name == '–¥–æ–º':
                    try:
                        item_id = int(arg[2])
                    except:
                        text = f'{user.link}, –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∑–¥–∞–Ω–∏—è:\n\n'
                        for index, item in enumerate(house_build, start=1):
                            try:
                                build = house_build[index]
                                text += f"{index}. {build['name']}({to_str(build['price'])})\n"
                            except Exception as ex:
                                print(f'{item}: {ex}')
                        return await message.reply(
                            text + "\n‚ùî –í–≤–µ–¥–∏—Ç–µ ¬´–ì–æ—Ä–æ–¥ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º [–Ω–æ–º–µ—Ä]¬ª –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ ",
                            reply_markup=city_house_kb.as_markup(), disable_web_page_preview=True)
                    try:
                        item = house_build[item_id]
                    except:
                        return await message.reply('üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞!')

                    price = (item['price'])

                    if user.balance < price:
                        return await message.reply(f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Ä—É–∫–∞—Ö, –Ω—É–∂–Ω–æ: {to_str(price)}')

                    builds = city.get_count_build()
                    if builds * 2 > city.road:
                        return await message.reply(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —ç—Ç–æ –∑–¥–∞–Ω–∏–µ:\n'
                                                   'üöß –í –≥–æ—Ä–æ–¥–µ –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –¥–æ—Ä–æ–≥, —Ä—è–¥–æ–º —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —ç—Ç–æ –∑–¥–∞–Ω–∏–µ. ')
                    user.edit('balance', user.balance - price)
                    count = city.house[f'{item_id}']['count_build'] + 1

                    sql.execute(
                        "UPDATE city SET house = jsonb_set(house, "
                        f"'{{{item_id}, count_build}}', "
                        f"'{count}') WHERE owner={user.id}", commit=True)
                    await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏–ª–∏  ¬´{item["name"]}¬ª'
                                        f'üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–¥–∞–Ω–∏–∏:\n'
                                        f' üë§ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–∞–Ω–∏–π: {count} —à—Ç.\n'
                                        f' üë§ –í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∂–∏—Ç–µ–ª–µ–π: {item["capacity"]} ',
                                        reply_markup=city_house_kb.as_markup())
                    result = QuestUser(user_id=user.id).update_progres(quest_ids=13, add_to_progresses=1)
                    if result != '':
                        await message.answer(text=result.format(user=user.link), disable_web_page_preview=True)
                    return

            else:
                return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–≥–æ—Ä–æ–¥ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å (–Ω–∞–∑–≤)</code>',
                                           reply_markup=show_city_kb.as_markup())
        elif arg[0].lower() == '–¥–æ—Ä–æ–≥–∞':
            try:
                count = abs(int(arg[1]))

            except:
                return await message.reply('üö´ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–≥–æ—Ä–æ–¥ –¥–æ—Ä–æ–≥–∞ {–∫–æ–ª-–≤–æ}</code>')

            price = 20000 * count

            if user.balance < price:
                return await message.reply(f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Ä—É–∫–∞—Ö, –Ω—É–∂–Ω–æ: {to_str(price)}')
            user.edit('balance', user.balance - price)
            city.edit('road', city.road + count)
            return await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–ª–æ–∂–∏–ª–∏  ¬´{count}¬ª –º–µ—Ç—Ä–æ–≤.',
                                       reply_markup=city_road_kb.as_markup())
        elif arg[0].lower() == '–Ω–∞–ª–æ–≥':
            try:
                count = int(arg[1])
                if count > 99 or count < 1:
                    return await message.reply('üö´ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–≥–æ—Ä–æ–¥ –Ω–∞–ª–æ–≥ [1-99]</code>')
            except:
                return await message.reply('üö´ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–≥–æ—Ä–æ–¥ –Ω–∞–ª–æ–≥ [1-99]</code>')

            city.edit('taxes', count)
            return await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Ä–∞–∑–º–µ—Ä –Ω–∞–ª–æ–≥–æ–≤–æ–π —Å—Ç–∞–≤–∫–∏  ¬´{count}¬ª.',
                                       reply_markup=show_city_kb.as_markup())
        elif arg[0].lower() == '–∫–∞–∑–Ω–∞':
            if city.kazna <= 0:
                return await message.reply(f'üö´ –ù–∞ –±–∞–ª–∞–Ω—Å–µ –∫–∞–∑–Ω—ã 0$', reply_markup=show_city_kb.as_markup())
            await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –∫–∞–∑–Ω—ã  ¬´{to_str(city.kazna)}¬ª.',
                                reply_markup=show_city_kb.as_markup())
            user.edit('balance', user.balance + city.kazna)
            city.edit('kazna', 0)
            result = QuestUser(user_id=user.id).update_progres(quest_ids=19, add_to_progresses=1)
            if result != '':
                await message.answer(text=result.format(user=user.link), disable_web_page_preview=True)
            return

        elif arg[0].lower() == '–∑–¥–∞–Ω–∏—è':
            text = 'üè° –í—Å–µ –∑–¥–∞–Ω–∏—è –≤ –≥–æ—Ä–æ–¥–µ:\n'
            count = 1
            for index, builds in enumerate(city.water, start=1):
                emoji = ''.join(numbers_emoji[int(i)] for i in str(count))
                build = water_build[index]
                text += f'{emoji}. {build["name"]} - ({city.water[f"{index}"]["count_build"]}) \n'
                count += 1
            for index, builds in enumerate(city.energy, start=1):
                emoji = ''.join(numbers_emoji[int(i)] for i in str(count))
                build = energy_build[index]
                text += f'{emoji}. {build["name"]} - ({city.energy[f"{index}"]["count_build"]}) \n'
                count += 1
            for index, builds in enumerate(city.house, start=1):
                emoji = ''.join(numbers_emoji[int(i)] for i in str(count))
                build = house_build[index]
                text += f'{emoji}. {build["name"]} - ({city.house[f"{index}"]["count_build"]}) \n'
                count += 1
            return await message.reply(text=text, disable_web_page_preview=True)

        elif arg[0].lower() == '–Ω–∏–∫':
            args = re.sub('''[@"'%<>üíéüë®‚Äçüî¨üåü‚ö°üëÆ‚Äç‚ôÇ‚û™üëæü•≤‚õèüòéüëëüíñüêüüçÜüòàüèøüê•üë∂üèøüá∑üá∫üá∫üá¶]''', '', arg[1])
            if not args:
                return await message.reply(f'üëì –ù–∏–∫–Ω–µ–π–º –≥–æ—Ä–æ–¥–∞: <b>{city.name}</b>')
            else:
                if len(args) > 16 or len(args) < 4:
                    return await message.reply('‚ùå –û—à–∏–±–∫–∞! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞: 16, –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: 6\n'
                                               '–¢–∞–∫–∂–µ –≤ –Ω–∏–∫–∞—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –∞–Ω–≥–ª. –∏ —Ä—É—Å. –±—É–∫–≤—ã!')
                city.edit('name', args)
                await message.reply(f'‚úÖ –ù–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: <code>{city.name}</code>',
                                    reply_markup=show_city_kb.as_markup())

        else:
            return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–ì–æ—Ä–æ–¥</code>')
