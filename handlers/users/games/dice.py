import asyncio

from aiogram import flags
from aiogram.types import Message
from config import bot_name
from keyboard.games import play_dice_kb
from keyboard.generate import show_balance_kb

from utils.main.cash import to_str, get_cash
from utils.main.users import User

from filters.users import flood_handler2, flood_handler


@flags.throttling_key('default')
async def dice_handler(message: Message):
    flood2 = await flood_handler2(message)
    flood = await flood_handler(message)
    if flood and flood2:
        arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[
            0].lower() else message.text.split()[2:]
        user = User(user=message.from_user)
        if len(arg) < 2:
            return await message.reply(f'{user.link}, –¥–ª—è –∏–≥—Ä—ã –≤ –ö—É–±–∏–∫ –≤–≤–µ–¥–∏—Ç–µ ¬´–ö—É–±–∏–∫ [—Å—Ç–∞–≤–∫–∞] [1-6]¬ª üëçüèº \n'
                                       'üí° –°—É–º–º—É —Å—Ç–∞–≤–∫–∏ –º–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä ¬´1–∫¬ª - —Å—Ç–∞–≤–∫–∞ –Ω–∞ 1000), –ª–∏–±–æ —Å–ª–æ–≤–∞–º–∏ ¬´–≤—Å–µ¬ª (—Å—Ç–∞–≤–∫–∞ –Ω–∞ –≤–µ—Å—å –±–∞–ª–∞–Ω—Å)'
                                       , disable_web_page_preview=True,
                                       reply_markup=play_dice_kb.as_markup())
        elif not arg[0].isdigit() or not arg[1].isdigit() or int(arg[0]) <= 0:
            return await message.reply(f'{user.link}, –¥–ª—è –∏–≥—Ä—ã –≤ –ö—É–±–∏–∫ –≤–≤–µ–¥–∏—Ç–µ ¬´–ö—É–±–∏–∫ [—Å—Ç–∞–≤–∫–∞] [1-6]¬ª üëçüèº \n'
                                       'üí° –°—É–º–º—É —Å—Ç–∞–≤–∫–∏ –º–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä ¬´1–∫¬ª - —Å—Ç–∞–≤–∫–∞ –Ω–∞ 1000), –ª–∏–±–æ —Å–ª–æ–≤–∞–º–∏ ¬´–≤—Å–µ¬ª (—Å—Ç–∞–≤–∫–∞ –Ω–∞ –≤–µ—Å—å –±–∞–ª–∞–Ω—Å)'
                                       , disable_web_page_preview=True,
                                       reply_markup=play_dice_kb.as_markup())

        user = User(user=message.from_user)

        summ = get_cash(arg[0] if arg[0].lower() not in ['–≤—Å—ë', '–≤—Å–µ'] else str(user.balance))
        index = int(arg[1])

        if summ <= 0:
            return await message.reply(f'‚ùå {user.link}, –°—Ç–∞–≤–∫–∞ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é', disable_web_page_preview=True)

        if user.balance < summ:
            return await message.reply(f'‚ùå {user.link}, –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è —Å—Ç–∞–≤–∫–∏! üí∏',
                                       disable_web_page_preview=True,
                                       reply_markup=show_balance_kb.as_markup())
        elif index < 1 or index > 6:
            return await message.reply(f'‚ùå  {user.link}, –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 6!', disable_web_page_preview=True)

        dice = (await message.reply_dice()).dice
        if dice.value != index:
            user.edit('balance', user.balance - summ)
            await asyncio.sleep(3)
            await message.reply(f'üòñ –í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ, –≤–∞–º –≤—ã–ø–∞–ª–æ {dice.value} –∞ –≤—ã –∑–∞–≥–∞–¥–∞–ª–∏ {index}. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é '
                                f'–≤—ã '
                                f'–ø—Ä–æ–∏–≥—Ä–∞–ª–∏ '
                                '–¥–µ–Ω—å–≥–∏!',
                                reply_markup=play_dice_kb.as_markup())
            # await writelog(message.from_user.id, f'–ö—É–±–∏–∫ –∏ –ø—Ä–æ–∏–≥—Ä—ã—à')
            return
        x = int(summ * 2)
        user.edit('balance', user.balance + x - summ)
        await asyncio.sleep(3)
        await message.reply(f'üèÖ –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ! –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ +{to_str(x)}',
                            reply_markup=play_dice_kb.as_markup())
        return
