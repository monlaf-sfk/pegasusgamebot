import asyncio

from aiogram import flags
from aiogram.types import Message
from filters.users import flood_handler2, flood_handler
from config import bot_name
from keyboard.games import play_bowling_kb
from keyboard.generate import show_balance_kb
from utils.main.cash import to_str, get_cash

from utils.main.users import User

values = {
    2: [1, 2, 3],
    3: [4]
}


@flags.throttling_key('default')
async def bowling_handler(message: Message):
    flood2 = await flood_handler2(message)
    flood = await flood_handler(message)
    if flood and flood2:
        arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[
            0].lower() else message.text.split()[2:]
        user = User(user=message.from_user)
        if len(arg) == 0:
            return await message.reply(f'üé≥ {user.link}, –¥–ª—è –∏–≥—Ä—ã –≤ –±–æ—É–ª–∏–Ω–≥ –≤–≤–µ–¥–∏—Ç–µ ¬´–ë–æ—É–ª–∏–Ω–≥ [—Å—Ç–∞–≤–∫–∞]¬ª üëçüèº \n'
                                       'üí° –°—É–º–º—É —Å—Ç–∞–≤–∫–∏ –º–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä ¬´1–∫¬ª - —Å—Ç–∞–≤–∫–∞ –Ω–∞ 1000), –ª–∏–±–æ —Å–ª–æ–≤–∞–º–∏ ¬´–≤—Å–µ¬ª (—Å—Ç–∞–≤–∫–∞ –Ω–∞ –≤–µ—Å—å –±–∞–ª–∞–Ω—Å)'
                                       , disable_web_page_preview=True,
                                       reply_markup=play_bowling_kb.as_markup())

        try:
            summ = ssumm = get_cash(arg[0] if arg[0].lower() not in ['–≤—Å—ë', '–≤—Å–µ'] else str(user.balance))
        except:
            summ = ssumm = 0
        if summ <= 0:
            return await message.reply(f'‚ùå {user.link}, –°—Ç–∞–≤–∫–∞ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é', disable_web_page_preview=True)

        if user.balance < summ:
            return await message.reply(f'‚ùå {user.link}, –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è —Å—Ç–∞–≤–∫–∏! üí∏',
                                       disable_web_page_preview=True,
                                       reply_markup=show_balance_kb.as_markup())

        bowling = (await message.reply_dice(emoji='üé≥')).dice

        if bowling.value in values[3]:
            await asyncio.sleep(3)
            return await message.reply(
                f'üé≥ {user.link}, –í—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ —Å–≤–æ–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞! (—Ö1)',
                disable_web_page_preview=True,
                reply_markup=play_bowling_kb.as_markup())
        elif bowling.value == 5:
            summ = int(summ * 1.25)
            user.edit('balance', user.balance + summ - ssumm)
            await asyncio.sleep(3)
            return await message.reply(
                f'üé≥ {user.link},  –í—ã —É–º–Ω–æ–∂–∏–ª–∏ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É –Ω–∞ (x1.25) –∏ –ø–æ–ª—É—á–∏–ª–∏ +{to_str(summ)} –Ω–∞ –±–∞–ª–∞–Ω—Å!',
                disable_web_page_preview=True,
                reply_markup=play_bowling_kb.as_markup())
        elif bowling.value == 6:
            summ = int(summ * 2.5)
            user.edit('balance', user.balance + summ - ssumm)
            await asyncio.sleep(3)
            return await message.reply(
                f'üé≥ {user.link}, –í—ã —É–º–Ω–æ–∂–∏–ª–∏ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É –Ω–∞ (x3) –∏ –ø–æ–ª—É—á–∏–ª–∏ +{to_str(summ)} –Ω–∞ –±–∞–ª–∞–Ω—Å!',
                disable_web_page_preview=True,
                reply_markup=play_bowling_kb.as_markup())
        else:
            user.edit('balance', user.balance - summ)
            await asyncio.sleep(3)
            return await message.reply(
                f'üòñ {user.link}, –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –±—ã–ª–∞ —É–º–Ω–æ–∂–µ–Ω–∞ –Ω–∞ (x0) –∏ –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {to_str(summ)}!',
                disable_web_page_preview=True,
                reply_markup=play_bowling_kb.as_markup())
