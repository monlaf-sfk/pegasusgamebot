from datetime import datetime

from aiogram import flags
from aiogram.types import Message

from config import bot_name
from keyboard.generate import show_balance_kb, show_inv_kb, show_vertolet_kb, vertolet_kb, buy_vertolet_kb, \
    ride_vertolet_kb
from utils.items.work_items import get_workitems_count, set_workitems_count

from utils.main.vertoleti import vertoleti, Vertolet
from utils.main.cash import to_str, get_cash
from utils.main.db import sql
from filters.users import flood_handler

numbers_emoji = ['0Ô∏è‚É£', '1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£']


@flags.throttling_key('default')
async def vertoleti_list_handler(message: Message):
    text = 'üöÅ –°–ø–∏—Å–æ–∫ –≤–µ—Ä—Ç–æ–ª—ë—Ç–æ–≤:\n'

    for index, i in vertoleti.items():
        emoji = ''.join(numbers_emoji[int(i)] for i in str(index))

        text += f'<code>{emoji}</code>.{i["name"]}\n' \
                f'üíµ –¶–µ–Ω–∞: {to_str(i["price"])} \n' \
                f'üí≤ –ù–∞–ª–æ–≥: {to_str(i["nalog"])}\n\n'
    return await message.reply(text + '\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–í–µ—Ä—Ç–æ–ª—ë—Ç –∫—É–ø–∏—Ç—å (–Ω–æ–º–µ—Ä)</code> —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å!',
                               reply_markup=buy_vertolet_kb.as_markup())


@flags.throttling_key('default')
async def vertoleti_handler(message: Message):
    flood = await flood_handler(message)
    if flood:
        arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[
            0].lower() else message.text.split()[2:]
        try:
            vertolet = Vertolet(user_id=message.from_user.id)
        except:
            vertolet = None
            if len(arg) < 1 or arg[0].lower() != '–∫—É–ø–∏—Ç—å':
                return await vertoleti_list_handler(message)
            try:
                if not arg[1].isdigit():
                    return await vertoleti_list_handler(message)
            except:
                return await vertoleti_list_handler(message)
        if len(arg) == 0:
            return await message.reply(text=vertolet.text, reply_markup=vertolet_kb.as_markup())
        elif arg[0].lower() in ['—Å–ø–∏—Å–æ–∫', '–ª–∏—Å—Ç']:
            return await vertoleti_list_handler(message)

        elif arg[0].lower() == '–ø—Ä–æ–¥–∞—Ç—å':
            doxod = vertolet.sell()
            sql.execute(f'UPDATE users SET bank = bank + {doxod} WHERE id = {message.from_user.id}')
            await message.reply(f'‚úÖ –í—ã –ø—Ä–æ–¥–∞–ª–∏ –≤–µ—Ä—Ç–æ–ª—ë—Ç –∏ —Å —É—á—ë—Ç–æ–º –Ω–∞–ª–æ–≥–æ–≤, –∏ –¥–æ—Ö–æ–¥–∞ –≤—ã –ø–æ–ª—É—á–∏–ª–∏: {to_str(doxod)}',
                                reply_markup=show_balance_kb.as_markup())

            return
        elif arg[0].lower() == '–∫—É–ø–∏—Ç—å':
            if vertolet:
                return await message.reply('‚ùó –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≤–µ—Ä—Ç–æ–ª—ë—Ç, –º–æ–∂–Ω–æ –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ 1.',
                                           reply_markup=show_vertolet_kb.as_markup())
            try:
                i = vertoleti[int(arg[1])]
            except:
                return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –≤–µ—Ä—Ç–æ–ª—ë—Ç—ã! 1-4')
            balance = \
                sql.execute(f'SELECT balance FROM users WHERE id = {message.from_user.id}', commit=False,
                            fetchone=True)[0]
            price = i["price"]

            if balance < price:
                return await message.reply(
                    f'üí≤ –ù–∞ —Ä—É–∫–∞—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏, –Ω—É–∂–Ω–æ: {to_str(price)}',
                    reply_markup=show_balance_kb.as_markup())
            Vertolet.create(user_id=message.from_user.id, vertolet_index=int(arg[1]))
            sql.execute(f'UPDATE users SET balance = balance - {price}, sell_count = 0 WHERE id ='
                        f' {message.from_user.id}', True)
            await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –≤–µ—Ä—Ç–æ–ª—ë—Ç <b>{i["name"]}</b> –∑–∞'
                                f' {to_str(price)}', reply_markup=show_vertolet_kb.as_markup())

            return
        elif arg[0].lower() in ['—Å–Ω—è—Ç—å', '–¥–æ—Ö–æ–¥']:
            xd = vertolet.cash
            if len(arg) > 1:
                try:
                    xd = get_cash(arg[1])
                except:
                    pass
            if vertolet.cash < xd or vertolet.cash < 0:
                return await message.reply('üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á–µ—Ç—É –≤–µ—Ä—Ç–æ–ª—ë—Ç—ã!')
            elif xd <= 0:
                return await message.reply('‚ùå –ù–µ–ª—å–∑—è —Ç–∞–∫!')
            sql.executescript(f'''UPDATE users SET bank = bank + {xd} WHERE id = {message.from_user.id};
                                  UPDATE vertoleti SET cash = cash - {xd} WHERE owner = {vertolet.owner};''',
                              True)

            await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ {to_str(xd)} —Å –ø—Ä–∏–±—ã–ª–∏ –≤–µ—Ä—Ç–æ–ª—ë—Ç–∞!',
                                reply_markup=show_balance_kb.as_markup())

            return
        elif arg[0].lower() in ['–ª–µ—Ç–µ—Ç—å', '–ª–µ—Ç–∞—Ç—å']:
            lol = datetime.now() - vertolet.time_buy
            if lol.total_seconds() < 2400:
                xd = f'{round((2400 - lol.total_seconds()) / 60)} –º–∏–Ω.'
                return await message.reply(f'üöÅ –í–µ—Ä—Ç–æ–ª—ë—Ç –Ω–æ–≤—ã–π –µ–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑: {xd}')
            if vertolet.fuel <= 0:
                return await message.reply('üöÅ –í–µ—Ä—Ç–æ–ª—ë—Ç –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –ª–µ—Ç–∞—Ç—å! –ï–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: 0%\n'
                                           '–í–∞–º –Ω—É–∂–Ω–æ <b>–ë–æ–ª—Ç–∏–∫ üî©</b> (x10) —á—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å 1%\n\n–í–≤–µ–¥–∏—Ç–µ <code>'
                                           ' –í–µ—Ä—Ç–æ–ª—ë—Ç –ø–æ—á–∏–Ω–∏—Ç—å</code> —á—Ç–æ–±—ã –ø–æ—á–∏–Ω–∏—Ç—å –≤–µ—Ä—Ç–æ–ª—ë—Ç',
                                           reply_markup=show_vertolet_kb.as_markup())
            elif vertolet.energy <= 0:
                return await message.reply(
                    '‚ö° –£ –≤–µ—Ä—Ç–æ–ª—ë—Ç—ã —Ä–∞–∑—Ä—è–¥–∏–ª—Å—è –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –æ–Ω –∑–∞—Ä—è–¥–∏–ª—Å—è!')

            doxod = vertolet.ride()
            await message.reply(f'üöÅ –í—ã –ø—Ä–æ–ª–µ—Ç–µ–ª–∏ {doxod[0]} –∫–º. –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {to_str(doxod[1])}'
                                f' –Ω–∞ —Å—á—ë—Ç –≤–µ—Ä—Ç–æ–ª—ë—Ç—ã! (-1‚ö°) (-1‚õΩ)\n'
                                f'‚ö° –¢–µ–∫—É—â–∞—è —ç–Ω–µ—Ä–≥–∏—è: {vertolet.energy}\n'
                                f'‚õΩ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ—Ä—Ç–æ–ª—ë—Ç—ã: {vertolet.fuel}%',
                                reply_markup=ride_vertolet_kb.as_markup())

            return

        elif arg[0].lower() in ['–ø–æ—á–∏–Ω–∏—Ç—å', '—á–∏–Ω–∏—Ç—å', '–ø–æ—á–∏–Ω–∫–∞']:
            count_user = get_workitems_count(8, message.from_user.id)

            if not count_user or count_user < 10:
                count_user = 0 if not count_user else count_user
                return await message.reply(
                    f"‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç {10 - count_user} <b>–ë–æ–ª—Ç–∏–∫–æ–≤ üî©</b> –¥–ª—è –ø–æ—á–∏–Ω–∫–∏!'",
                    reply_markup=show_inv_kb.as_markup())

            set_workitems_count(8, message.from_user.id, count_user - 10)

            sql.executescript(f"UPDATE vertoleti SET fuel = fuel + 1 WHERE owner = {vertolet.owner};")

            await message.reply('‚úÖ –í–µ—Ä—Ç–æ–ª—ë—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ +1%')

            return

        elif arg[0].lower() in ['–æ–ø–ª–∞—Ç–∞', '–æ–ø–ª–∞—Ç–∏—Ç—å', '–Ω–∞–ª–æ–≥', '–Ω–∞–ª–æ–≥–∏']:
            xd = vertolet.nalog
            if len(arg) > 1:
                try:
                    xd = get_cash(arg[1])
                except:
                    pass
            if vertolet.nalog < 1:
                return await message.reply('üí≤ –ù–∞–ª–æ–≥ –Ω–∞ –≤–µ—Ä—Ç–æ–ª—ë—Ç –∏ —Ç–∞–∫ –æ–ø–ª–∞—á–µ–Ω!')
            elif vertolet.nalog < xd:
                xd = vertolet.nalog
            elif xd <= 0:
                return await message.reply('‚ùå –ù–µ–ª—å–∑—è —Ç–∞–∫!')
            if sql.execute(f'SELECT bank FROM users WHERE id = {message.from_user.id}', False, True)[0][0] < xd:
                return await message.reply(f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–ª–æ–≥–∞, –Ω—É–∂–Ω–æ: {to_str(xd)}!',
                                           reply_markup=show_balance_kb.as_markup())

            sql.executescript(f'''UPDATE users SET bank = bank - {xd} WHERE id = {message.from_user.id};
                                  UPDATE vertoleti SET nalog = {vertolet.nalog - xd} WHERE owner = {vertolet.owner};''',
                              True)

            await message.reply('‚úÖ –ù–∞–ª–æ–≥ –Ω–∞ –≤–µ—Ä—Ç–æ–ª—ë—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω!')

            return
        else:
            return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–í–µ—Ä—Ç–æ–ª—ë—Ç (—Å–Ω—è—Ç—å\–æ–ø–ª–∞—Ç–∏—Ç—å\–ª–µ—Ç–µ—Ç—å) (—Å—É–º–º–∞)</code>')
