import asyncio
import random
from contextlib import suppress
from datetime import datetime, timedelta
import decimal
import time

import numpy as np
from aiogram import flags, Router, F, Bot
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import Message, CallbackQuery

from config import bot_name
from filters.triggers import Trigger
from keyboard.clans import war_clan, war_clan_info, war_clan_member
from utils.clan.clan import Clanuser, Clan
from utils.clan.clanwar import ClanWar, ClanWarFind, ClanWarMember
from utils.main.donates import to_str as unix_date
from utils.main.db import sql, timetostr
from utils.main.users import User, Settings
from utils.quests.main import QuestUser
from utils.weapons.swords import Armory, ArmoryInv

router = Router()
router.message.filter(F.chat.type.in_({"private"}))


async def attack_clan(weapon: dict = None, min_damage: int = 1, max_damage: int = 1):
    x = random.randint(min_damage, max_damage)
    if weapon:
        x += random.randint(weapon["min_attack"], weapon["max_attack"])
        crit_chance = np.random.choice([1, 2], 1,
                                       p=[1 - weapon["crit_chance"] * 0.01, weapon["crit_chance"] * 0.01])[0]

        if crit_chance == 2:
            x += x * weapon["crit_multi"] * 0.01

    return x


@router.message(Trigger(["–∫–≤"]))
@flags.throttling_key('default')
async def clan_handler(message: Message, bot: Bot):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[
        0].lower() else message.text.split()[2:]

    user = User(id=message.from_user.id)
    try:
        clanuser = Clanuser(user_id=message.from_user.id)
    except:
        return await message.reply(f'‚ùó {user.link}, –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞ :(', disable_web_page_preview=True)
    clan = Clan(clan_id=clanuser.clan_id)
    try:
        clanwar = ClanWar(clan_id=clan.id)
    except:
        clanwar = None
    if len(arg) != 0 and arg[0].lower() in ['—Å—Ç–∞—Ä—Ç', '–Ω–∞—á–∞—Ç—å']:
        if clanwar:
            return await message.reply(f'‚ùó {user.link}, –≤–æ–π–Ω–∞ –∫–ª–∞–Ω–æ–≤ —É–∂–µ –Ω–∞—á–∞—Ç–∞!'
                                       '‚öîÔ∏è –ò–¥—ë—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞', reply_markup=war_clan(clan_id=clan.id),
                                       disable_web_page_preview=True)
        if clanuser.status <= 1:
            return await message.reply(f'‚ùó {user.link},—É –≤–∞—Å –Ω–∏–∑–∫–∏–π —Ä–∞–Ω–≥ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!',
                                       disable_web_page_preview=True)

        if clan.last_attack != None and (decimal.Decimal(time.time()) - clan.last_attack) < 3600 * 12:
            return await message.reply(
                f'üïë {user.link}, –í—ã –Ω–µ–¥–∞–≤–Ω–æ —É–∂–µ –∞—Ç–∞–∫–æ–≤–∞–ª–∏, –≤–∞—â–∏–º —Ç–æ–≤–∞—Ä–∏—â–∞–º –Ω—É–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è!\n'
                f'–ß–µ—Ä–µ–∑: {timetostr(3600 * 12 + clan.last_attack - decimal.Decimal(time.time()))}',
                disable_web_page_preview=True)

        matchmaking_time = sql.execute(
            'SELECT AVG(EXTRACT(EPOCH FROM (end_time - start_time))) FROM ClanWarFind', fetchone=True)[0]

        matchmaking_time = matchmaking_time if matchmaking_time else 24 * 60 * 60

        try:
            ClanWarFind(clan_id=clan.id)
        except:
            ClanWarFind.find_to_war(clan.id, clan.name, clan.power, 'FINDING')
            await message.reply(
                f'{user.link},  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ:\n'
                'üõ° –ò–¥—ë—Ç –ø–æ–¥–±–æ—Ä –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞...\n'
                'üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: 0\n'
                f'üïë –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–¥–±–æ—Ä–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {timetostr(matchmaking_time)}\n',
                reply_markup=war_clan_member(clan_id=clan.id),
                disable_web_page_preview=True)
            clanusers = \
                sql.execute(f"SELECT user_id FROM ClanUsers WHERE clan_id={clan.id}",
                            fetch=True)
            for user_id in clanusers:
                settings = Settings(user_id[0])
                if settings.clan_notifies:
                    with suppress(TelegramBadRequest):
                        await bot.send_message(chat_id=user_id[0], text=f"[–ö–õ–ê–ù]\n"
                                                                        f'‚ñ∂Ô∏è –ò–≥—Ä–æ–∫ ¬´{user.link}¬ª –Ω–∞—á–∞–ª –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É!\n"'
                                                                        'üîï –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è¬ª')
                    await asyncio.sleep(0.5)
            return

        return await message.reply(
            f'{user.link},  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ:\n'
            'üõ° –ò–¥—ë—Ç –ø–æ–¥–±–æ—Ä –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞...\n'
            'üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: 0\n'
            f'üïë –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–¥–±–æ—Ä–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {timetostr(matchmaking_time)}\n',
            reply_markup=war_clan_member(clan_id=clan.id),
            disable_web_page_preview=True)

    else:
        if clanwar:
            members = sql.select_data(table='WarParticipants', title='clan_id', name=clan.id)

            if clanwar.prepare:

                return await message.reply(
                    f'{user.link}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ:\n'
                    f'‚≠ê –ó–≤–µ–∑–¥: {clanwar.rating_first if clanwar.id_first == clan.id else clanwar.rating_second}\n'
                    f'üõ° –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: ¬´{clanwar.name_first if clanwar.name_first != clan.name else clanwar.name_second}¬ª\n'
                    f'üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(members)}\n'
                    f'üïë –î–æ –∫–æ–Ω—Ü–∞ –æ—Ç–±–æ—Ä–æ—á–Ω–æ–≥–æ —ç—Ç–∞–ø–∞: '
                    f'{unix_date(clanwar.time_war - timedelta(hours=3) - datetime.now())}\n',
                    reply_markup=war_clan(clan_id=clan.id),
                    disable_web_page_preview=True)
            else:
                return await message.reply(
                    f'{user.link}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ:\n'
                    f'‚≠ê –ó–≤–µ–∑–¥: {clanwar.rating_first if clanwar.id_first == clan.id else clanwar.rating_second}\n'
                    f'üõ° –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: ¬´{clanwar.name_first if clanwar.name_first != clan.name else clanwar.name_second}¬ª\n'
                    f'üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(members)}\n'
                    f'üïë –î–æ –∫–æ–Ω—Ü–∞ –ö–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω—ã: '
                    f'{unix_date(clanwar.time_war - datetime.now())}\n',
                    reply_markup=war_clan(clan_id=clan.id),
                    disable_web_page_preview=True)
        else:
            try:
                find = ClanWarFind(clan_id=clan.id)
            except:
                find = None

            if find is None:
                if clanuser.status <= 1:
                    return await message.reply(
                        f'{user.link}, –∫–ª–∞–Ω–æ–≤–∞—è –≤–æ–π–Ω–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ !\n'
                        'üí° –í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∏–≥—Ä–æ–∫–∞–º —Å –≤—ã—Å–æ–∫–∏–º–∏ —Ä–∞–Ω–≥–∞–º–∏ —Å –ø—Ä–æ—Å—å–±–æ–π –Ω–∞—á–∞—Ç—å –≤–æ–π–Ω—É',
                        disable_web_page_preview=True)
                else:
                    return await message.reply(
                        f'{user.link}, –∫–ª–∞–Ω–æ–≤–∞—è –≤–æ–π–Ω–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ !\n'
                        'üí° –î–ª—è –Ω–∞—á–∞–ª–∞ –≤–æ–π–Ω—ã –≤–≤–µ–¥–∏—Ç–µ ¬´–ö–≤ —Å—Ç–∞—Ä—Ç¬ª',
                        disable_web_page_preview=True)
            else:

                matchmaking_time = sql.execute(
                    'SELECT AVG(EXTRACT(EPOCH FROM (end_time - start_time))) FROM ClanWarFind', fetchone=True)[0]

                matchmaking_time = matchmaking_time if matchmaking_time else 24 * 60 * 60

                return await message.reply(
                    f'{user.link},  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ:\n'
                    'üõ° –ò–¥—ë—Ç –ø–æ–¥–±–æ—Ä –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞...\n'
                    'üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: 0\n'
                    f'üïë –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–¥–±–æ—Ä–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {timetostr(matchmaking_time)}\n',
                    reply_markup=war_clan_member(clan_id=clan.id),
                    disable_web_page_preview=True)


@router.callback_query(F.data.startswith('clanwar'))
@flags.throttling_key('default')
async def clanwar_action_call(callback_query: CallbackQuery):
    action, clan_id = callback_query.data.split(':')[1:]
    user = User(user=callback_query.from_user)
    try:
        clanuser = Clanuser(user_id=callback_query.from_user.id)
    except:
        if clanuser is None:
            return await callback_query.message.edit_text(f'? {user.link}, –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞ :(',
                                                          disable_web_page_preview=True)
    clan = Clan(clan_id=clanuser.clan_id)
    try:
        clan_war_member = ClanWarMember(member_id=clanuser.user_id)
    except:
        clan_war_member = None
    try:
        clanwar = ClanWar(clan_id=clan.id)
    except:
        try:
            find = ClanWarFind(clan_id=clan.id)
        except:
            find = None
        if find is None:
            if clanuser.status <= 1:
                return await callback_query.message.edit_text(
                    f'{user.link}, –∫–ª–∞–Ω–æ–≤–∞—è –≤–æ–π–Ω–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ !\n'
                    'üí° –í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∏–≥—Ä–æ–∫–∞–º —Å –≤—ã—Å–æ–∫–∏–º–∏ —Ä–∞–Ω–≥–∞–º–∏ —Å –ø—Ä–æ—Å—å–±–æ–π –Ω–∞—á–∞—Ç—å –≤–æ–π–Ω—É',
                    disable_web_page_preview=True)
            else:
                return await callback_query.message.edit_text(
                    f'{user.link}, –∫–ª–∞–Ω–æ–≤–∞—è –≤–æ–π–Ω–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ !\n'
                    'üí° –î–ª—è –Ω–∞—á–∞–ª–∞ –≤–æ–π–Ω—ã –≤–≤–µ–¥–∏—Ç–µ ¬´–ö–≤ —Å—Ç–∞—Ä—Ç¬ª',
                    disable_web_page_preview=True)
        else:
            matchmaking_time = sql.execute(
                'SELECT AVG(EXTRACT(EPOCH FROM (end_time - start_time))) FROM ClanWarFind', fetch=True)
            matchmaking_time = matchmaking_time[0][0] if matchmaking_time else 24 * 60 * 60
            return await callback_query.message.edit_text(
                f'{user.link},  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ:\n'
                'üõ° –ò–¥—ë—Ç –ø–æ–¥–±–æ—Ä –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞...\n'
                'üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: 0\n'
                f'üïë –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–¥–±–æ—Ä–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {timetostr(matchmaking_time)}\n',
                reply_markup=war_clan_member(clan_id=clan.id),
                disable_web_page_preview=True)
    if not clanwar.prepare and not clan_war_member:
        return await callback_query.message.edit_text(f'{user.link}, –í—ã –Ω–µ —É—Å–ø–µ–ª–∏ –ø—Ä–æ–π—Ç–∏ –æ—Ç–±–æ—Ä–æ—á–Ω—ã–π —ç—Ç–∞–ø\n'
                                                      'üí° –ù—É–∂–Ω–æ –±—ã–ª–æ —Å—ã–≥—Ä–∞—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 1 –±–æ–π, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≤–æ–π–Ω–µ !',

                                                      disable_web_page_preview=True)
    if action == 'member':
        members = sql.select_data(table='WarParticipants', title='clan_id', name=clan_id)
        if not members:
            return await callback_query.message.edit_text(f'{user.link}, –≤–æ–π–Ω–µ –µ—â—ë –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ \n'
                                                          'üí° –°—ã–≥—Ä–∞–π—Ç–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 1 –±–æ–π, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≤–æ–π–Ω–µ',
                                                          reply_markup=war_clan_info(clan_id=clan.id),
                                                          disable_web_page_preview=True)
        else:
            text = f"{user.link},  –≤ –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç {len(members)} —á–µ–ª–æ–≤–µ–∫::\n"
            for member in members:
                user_clan = User(id=member['member_id'])
                text += f'[üë•] {user_clan.link}(<code>{user_clan.id}</code>) ‚Äî üéÆ {member[4]}\n'
            return await callback_query.message.edit_text(text, reply_markup=war_clan_info(clan_id=clan.id),
                                                          disable_web_page_preview=True)
    elif action == 'info':

        members = sql.select_data(table='WarParticipants', title='clan_id', name=clan.id)
        if clanwar.prepare:
            return await callback_query.message.edit_text(
                f'{user.link}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ:\n'
                f'‚≠ê –ó–≤–µ–∑–¥: {clanwar.rating_first if clanwar.id_first == clan.id else clanwar.rating_second}\n'
                f'üõ° –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: ¬´{clanwar.name_first if clanwar.name_first != clan.name else clanwar.name_second}¬ª\n'
                f'üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(members)}\n'
                f'üïë –î–æ –∫–æ–Ω—Ü–∞ –æ—Ç–±–æ—Ä–æ—á–Ω–æ–≥–æ —ç—Ç–∞–ø–∞: '
                f'{unix_date(clanwar.time_war - timedelta(hours=3) - datetime.now())}\n',
                reply_markup=war_clan(clan_id=clan.id),
                disable_web_page_preview=True)
        else:
            return await callback_query.message.edit_text(
                f'{user.link}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ:\n'
                f'‚≠ê –ó–≤–µ–∑–¥: {clanwar.rating_first if clanwar.id_first == clan.id else clanwar.rating_second}\n'
                f'üõ° –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: ¬´{clanwar.name_first if clanwar.name_first != clan.name else clanwar.name_second}¬ª\n'
                f'üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(members)}\n'
                f'üïë –î–æ –∫–æ–Ω—Ü–∞ –ö–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω—ã: '
                f'{unix_date(clanwar.time_war - datetime.now())}\n',
                reply_markup=war_clan(clan_id=clan.id),
                disable_web_page_preview=True)


    elif action == 'attack':

        if not clan_war_member:
            ClanWarMember.insert_to_war(clanuser.user_id, clanuser.clan_id, clanwar.war_id, clanuser.power)
            clan_war_member = ClanWarMember(member_id=clanuser.user_id)
            result = QuestUser(user_id=user.id).update_progres(quest_ids=20, add_to_progresses=1)
            if result != '':
                await callback_query.message.answer(text=result.format(user=user.link), disable_web_page_preview=True)

        if clan_war_member.cooldown and time.time() - float(clan_war_member.cooldown) <= 300:
            return await callback_query.message.reply(
                f'üïë –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±–æ–π —á–µ—Ä–µ–∑: {timetostr(float(clan_war_member.cooldown) + 300 - time.time())}',
                reply_markup=war_clan(clan_id=clan.id),
                disable_web_page_preview=True)
        oponent = sql.execute(
            f"SELECT user_id FROM ClanUsers WHERE clan_id={clanwar.id_first if clanwar.id_first != clan.id else clanwar.id_second} ORDER BY RANDOM() LIMIT 1",
            fetchone=True)
        try:
            weapon1 = Armory(armed=True, user_id=clanuser.user_id).weapon
        except:
            weapon1 = None
        try:
            weapon2 = Armory(armed=True, user_id=oponent['user_id']).weapon
        except:
            weapon2 = None
        armory_inv1 = ArmoryInv(clanuser.user_id)
        armory_inv2 = ArmoryInv(oponent['user_id'])
        user2 = User(id=oponent['user_id'])

        clan_war_member.edit('attacks', clan_war_member.attacks + 1)

        text = f'{user.link}, –í—ã –Ω–∞–ø–∞–ª–∏ –Ω–∞ –∏–≥—Ä–æ–∫–∞ ¬´{user2.first_name}¬ª:\n'
        count1 = 0
        count2 = 0
        for i in range(1, 4):
            damage_user1 = await attack_clan(weapon1, armory_inv1.min_damage, armory_inv1.max_damage)
            damage_user2 = await attack_clan(weapon2, armory_inv2.min_damage, armory_inv2.max_damage)
            if damage_user1 > damage_user2:
                count1 += 1
            else:
                count2 += 1
            text += f'–†–∞—É–Ω–¥ {i}\n' \
                    f'{damage_user2} ‚öî {damage_user1}\n\n'
        clan_war_member.edit('cooldown', time.time())
        if count1 > count2:
            rating = random.randint(10, 20)
            clanuser.edit('rating', clanuser.rating + rating)
            if not clanwar.prepare:
                rating_clan = random.randint(100, 200)
                sql.execute(
                    f"UPDATE ClanWars SET {'rating_first' if clanwar.id_first == clan.id else 'rating_second'}="
                    f"{'rating_first' if clanwar.id_first == clan.id else 'rating_second'} + {rating_clan} "
                    f"WHERE war_id={clanwar.war_id} ", commit=True)
                text += f"‚≠ê –ó–≤–µ–∑–¥: +{rating_clan}\n \n"
            return await callback_query.message.reply(f'{text}'
                                                      f'üéâ –¢—ã –ø–æ–±–µ–¥–∏–ª –≤ ‚öîÔ∏è–¥—É—ç–ª–∏ —Å–æ —Å—á–µ—Ç–æ–º {count1}:{count2}'
                                                      f'üèÜ –†–µ–π—Ç–∏–Ω–≥: +{rating}',
                                                      reply_markup=war_clan(clan_id=clan.id),
                                                      disable_web_page_preview=True)
        else:
            rating = random.randint(10, 20)
            clanuser.edit('rating', clanuser.rating - rating if clanuser.rating - rating > 0 else 0)
            return await callback_query.message.reply(f'{text}'
                                                      f'üëé –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª –≤ ‚öîÔ∏è–¥—É—ç–ª–∏ —Å–æ —Å—á–µ—Ç–æ–º {count1}:{count2}'
                                                      f'üèÜ –†–µ–π—Ç–∏–Ω–≥: -{rating}',
                                                      reply_markup=war_clan(clan_id=clan.id),
                                                      disable_web_page_preview=True)
