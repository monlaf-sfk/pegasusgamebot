import time

from aiogram import flags

from filters.users import flood_handler
from aiogram.types import Message

from config import bot_name
from keyboard.generate import show_balance_kb, show_house_kb, house_kb, buy_house_kb
from utils.logs import writelog
from utils.main.cash import to_str, get_cash
from utils.main.houses import House, houses
from utils.main.db import sql


@flags.throttling_key('default')
async def house_list_handler(message: Message):
    text = '–ù–∞–∑–≤–∞–Ω–∏–µ - —Ü–µ–Ω–∞ - –¥–æ—Ö–æ–¥ - –Ω–∞–ª–æ–≥\n'
    asd = sql.execute(f'SELECT sell_count FROM users WHERE id = {message.from_user.id}', False, True)[0][0]
    if asd is None:
        asd = 0
    xa = asd = float(f'0.{asd}')
    for index, i in houses.items():
        price = i["price"] - int(i["price"] * xa)
        text += f'<code>{index}</code>. {i["name"]} - {to_str(price)} - {to_str(i["doxod"])}' \
                f' - {to_str(i["nalog"])}\n'
    return await message.reply(
        f'<i>(–í–∞—à–∞ —Å–∫–∏–¥–∫–∞: x{asd})</i>\n\n'
        + text + '\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–î–æ–º –∫—É–ø–∏—Ç—å (–Ω–æ–º–µ—Ä)</code> —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å!',
        reply_markup=buy_house_kb.as_markup())


@flags.throttling_key('default')
async def house_handler(message: Message):
    flood = await flood_handler(message)
    if flood:
        arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[
            0].lower() else message.text.split()[2:]
        try:
            house = House(user_id=message.from_user.id)
        except:
            house = None
            if len(arg) < 1 or arg[0].lower() != '–∫—É–ø–∏—Ç—å':
                return await house_list_handler(message)
            try:
                if not arg[1].isdigit():
                    return await house_list_handler(message)
            except:
                return await house_list_handler(message)

        if len(arg) == 0:
            return await message.reply(text=house.text, reply_markup=house_kb.as_markup())
        elif arg[0].lower() in ['—Å–ø–∏—Å–æ–∫', '–ª–∏—Å—Ç']:
            return await house_list_handler(message)
        elif arg[0].lower() == '–ø—Ä–æ–¥–∞—Ç—å':
            doxod = house.sell()
            sql.execute(f'UPDATE users SET bank = bank + {doxod} WHERE id = {message.from_user.id}', True, False)
            await message.reply(f'‚úÖ –í—ã –ø—Ä–æ–¥–∞–ª–∏ –¥–æ–º –∏ —Å —É—á—ë—Ç–æ–º –Ω–∞–ª–æ–≥–æ–≤, –∏ –¥–æ—Ö–æ–¥–∞ –≤—ã –ø–æ–ª—É—á–∏–ª–∏: {to_str(doxod)}',
                                reply_markup=show_balance_kb.as_markup())

            return
        elif arg[0].lower() == '–∫—É–ø–∏—Ç—å':
            if house:
                return await message.reply('‚ùó –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ–º, –º–æ–∂–Ω–æ –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ 1.',
                                           reply_markup=show_house_kb.as_markup())
            try:
                i = houses[int(arg[1])]
            except KeyError:
                return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –¥–æ–º–∞!')

            xa = sql.execute(f'SELECT sell_count, balance FROM users WHERE id = {message.from_user.id}', False, True)[0]
            balance = xa[1]
            xa = xa[0]
            if xa is None:
                xa = 0
            xa = float(f'0.{xa}')
            price = i["price"] - int(i["price"] * xa)

            if balance < price:
                return await message.reply(f'üí≤ –ù–∞ —Ä—É–∫–∞—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏, –Ω—É–∂–Ω–æ: '
                                           f'{to_str(price)}',
                                           reply_markup=show_balance_kb.as_markup())
            House.create(user_id=message.from_user.id, house_index=int(arg[1]))

            sql.execute(f'UPDATE users SET balance = balance - {price}, sell_count = 0 WHERE id ='
                        f' {message.from_user.id}', True)
            await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ö–∞—Ç—É {i["name"]} –∑–∞ {to_str(price)}',
                                reply_markup=show_house_kb.as_markup())

            return
        elif arg[0].lower() in ['–∞—Ä–µ–Ω–¥–∞', '—Å–¥–∞—Ç—å']:
            house.editmany(arenda=not house.arenda, last=time.time() if (not house.arenda) is True else None)
            await message.reply('üÖ∞Ô∏è –í—ã —Å–¥–∞–ª–∏ –≤ –∞—Ä–µ–Ω–¥—É —Å–≤–æ–π –¥–æ–º!' if house.arenda else
                                'üÖ∞Ô∏è –í—ã —Å–Ω—è–ª–∏ —Å –∞—Ä–µ–Ω–¥—ã —Å–≤–æ–π –¥–æ–º!',
                                reply_markup=show_house_kb.as_markup())

            return
        elif arg[0].lower() in ['—Å–Ω—è—Ç—å', '–¥–æ—Ö–æ–¥']:
            xd = house.cash
            if len(arg) > 1:
                try:
                    xd = get_cash(arg[1])
                except:
                    pass
            if house.cash < xd or house.cash < 0:
                return await message.reply('üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á–µ—Ç—É –¥–æ–º–∞!')
            elif xd <= 0:
                return await message.reply('‚ùå –ù–µ–ª—å–∑—è —Ç–∞–∫!')
            sql.executescript(f'''UPDATE users SET bank = bank + {xd} WHERE id = {message.from_user.id};
            UPDATE houses SET cash = {house.cash - xd} WHERE owner = {house.owner};''', True)

            await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ {to_str(xd)} —Å –ø—Ä–∏–±—ã–ª–∏ –¥–æ–º–∞!',
                                reply_markup=show_house_kb.as_markup())
            await writelog(message.from_user.id, f'–°–Ω—è—Ç–∏–µ {to_str(xd)} —Å –ø—Ä–∏–±—ã–ª–∏ –¥–æ–º–∞')
            return
        elif arg[0].lower() in ['–Ω–∞–ª–æ–≥', '–Ω–∞–ª–æ–≥–∏']:
            xd = house.nalog
            if len(arg) > 1:
                try:
                    xd = get_cash(arg[1])
                except:
                    pass
            if house.nalog < 1:
                return await message.reply('üí≤ –ù–∞–ª–æ–≥ –Ω–∞ –¥–æ–º –∏ —Ç–∞–∫ –æ–ø–ª–∞—á–µ–Ω!')
            elif house.nalog < xd:
                xd = house.nalog
            elif xd <= 0:
                return await message.reply('‚ùå –ù–µ–ª—å–∑—è —Ç–∞–∫!')
            if sql.execute(f'SELECT bank FROM users WHERE id = {message.from_user.id}', False, True)[0][0] < xd:
                await message.reply(f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–ª–æ–≥–∞, –Ω—É–∂–Ω–æ: {to_str(xd)}!',
                                    reply_markup=show_balance_kb.as_markup())

                return

            sql.executescript(f'''UPDATE users SET bank = bank - {xd} WHERE id = {message.from_user.id};
                    UPDATE houses SET nalog = {house.nalog - xd} WHERE owner = {house.owner};''', True)

            return await message.reply('‚úÖ –ù–∞–ª–æ–≥ –Ω–∞ –¥–æ–º —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω!')
        else:
            return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–î–æ–º (—Å–Ω—è—Ç—å\—Å–¥–∞—Ç—å\–æ–ø–ª–∞—Ç–∏—Ç—å) (—Å—É–º–º–∞)</code>')
