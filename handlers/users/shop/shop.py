from operator import itemgetter

from aiogram import flags, F
from aiogram.fsm.state import State, StatesGroup

from aiogram.types import Message, CallbackQuery

from aiogram_dialog import (
    Dialog, DialogManager,
    StartMode, Window,
)
from aiogram_dialog.widgets.kbd import (ScrollingGroup, Select, SwitchTo, Button, Row, CurrentPage, PrevPage, NextPage,
                                        Checkbox
                                        )
from aiogram_dialog.widgets.text import Format, Const

from config import bot_name
from handlers.users.clan.clan_rob import name_robs
from utils.clan.clan import Clanuser
from utils.clan.clan_rob import ClanRob
from utils.items.items import ItemsRob, items_rob
from utils.main.cash import to_str4
from utils.main.db import sql

from utils.main.users import User


class Shop(StatesGroup):
    LIST_PAGER = State()
    INFO_PAGER = State()


MAIN_MENU_BTN = SwitchTo(Const("–ù–∞–∑–∞–¥"), id="main", state=Shop.LIST_PAGER)


def to_str3(money: int):
    b = f'{money:,}'
    return f"{b.replace(',', '.')}$"


async def product_getter(dialog_manager: DialogManager, **_kwargs):
    user = User(id=dialog_manager.event.from_user.id)
    clan_id = dialog_manager.start_data.get("clan_id", None)
    clanrob = sql.execute(f"SELECT index_rob , plan_rob FROM ClanRob WHERE clan_id={clan_id}", fetch=True)[0]
    text = get_list_itemsforbuy(clanrob['index_rob'], clanrob['plan_rob'], user.id)

    return {
        "name": user.link,
        'text': text,
        "items": [(f'{index}. {item["name"]}{item["emoji"]} - {to_str3(item["sell_price"])}', index) for index, item
                  in enumerate(sql.get_all_data('items_rob'), start=1)],
    }


async def on_click(callback: CallbackQuery, button: Button,
                   dialog_manager: DialogManager, item_id: str):
    try:
        clanuser = Clanuser(user_id=callback.from_user.id)
    except:
        return await callback.answer(f'‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞ :(', show_alert=True,
                                     cache_time=1)
    try:
        clan_rob = ClanRob(clan_id=clanuser.clan_id)
    except:
        return await callback.answer(f'‚ùó –ø–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ '
                                     f'—Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è '
                                     f'–æ–≥—Ä–∞–±–ª–µ–Ω–∏—è üëçüèª')
    if not clan_rob.prepare and clan_rob.time_rob:
        return await callback.answer(f'‚ùó  –ø–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ '
                                     f'—Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—é üëçüèª')
    if clan_rob.prepare and clan_rob.plan_rob == 0:
        return await callback.answer(f'‚ùó –ø–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ '
                                     f'–ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–ª–∞–Ω–∞ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è üò©')

    items = ItemsRob(item_id)
    user = User(user=callback.from_user)
    if user.balance < items.sell_price:
        return await callback.answer(f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Ä—É–∫–∞—Ö, –Ω—É–∂–Ω–æ: {to_str4(items.sell_price)}',
                                     show_alert=True)
    count = items.get_item_count(user.id)
    if count and count >= 1:
        return await callback.answer(f'‚ùå  –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç', show_alert=True)
    items.set_item_count(user.id, 1)
    user.edit('balance', user.balance - items.sell_price)

    await callback.answer(f'üí≤ –í—ã –∫—É–ø–∏–ª–∏ {items.name} (x1) –∑–∞ {to_str4(items.sell_price)}', show_alert=True)
    if ItemsRob.check_allitems(user.id, name_robs[clan_rob.index_rob]['plan'][clan_rob.plan_rob]['subjects']):
        await callback.message.edit_text(f"{user.link}, –≤—Å–µ —Ç—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∫—É–ø–ª–µ–Ω—ã! üòØ\n"
                                         "‚úÖ –í—ã –¥–æ–ø—É—â–µ–Ω—ã –∫ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—é, –æ–∂–∏–¥–∞–π—Ç–µ –∫–æ–Ω—Ü–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏.",
                                         disable_web_page_preview=True)
        clanuser.edit('rob_involved', True)
        return await dialog_manager.done()
    await dialog_manager.show()


shop_dialog = Dialog(
    Window(
        Format("{name}, —Ç—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–∏:\n"
               '\n{text}\n'
               '‚ñ∂Ô∏è –î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ ¬´–®–æ–ø [–Ω–æ–º–µ—Ä]¬ª'),
        ScrollingGroup(

            Select(
                Format("{item[0]}"),
                id="cl",
                items="items",
                item_id_getter=itemgetter(1),
                on_click=on_click,
            ),
            width=2,
            height=7,
            hide_pager=True,
            id="scroll_with_pager",
        ),
        # Row(
        #     CurrentPage(scroll="scroll_with_pager", text=Format("{current_page1}/{pages}")),
        #     PrevPage(
        #         scroll='scroll_with_pager', text=Format("‚óÄÔ∏è"),
        #         when=F["current_page1"] != 1
        #     ),
        #     NextPage(
        #         scroll='scroll_with_pager', text=Format("‚ñ∂Ô∏è"),
        #         when=F["pages"] != F["current_page1"]
        #     )
        # ),
        getter=product_getter,
        state=Shop.LIST_PAGER,
        disable_web_page_preview=True
    )
)


def get_list_itemsforbuy(index_rob, plan_rob, user_id):
    numbers_emoji = ['0Ô∏è‚É£', '1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£']
    text = ''
    for item_id in name_robs[index_rob]['plan'][plan_rob]['subjects']:
        emoji = ''.join(numbers_emoji[int(i)] for i in str(item_id))
        item = items_rob[item_id]
        if ItemsRob.check_item(user_id, item_id):
            text += f'{emoji} {item["emoji"]} {item["name"]} ‚úî\n'
        else:
            text += f'{emoji} {item["emoji"]} {item["name"]}\n'
    return text


@flags.throttling_key('default')
async def shop_list_handler(message: Message, dialog_manager: DialogManager):
    user = User(id=message.from_user.id)
    try:
        clanuser = Clanuser(user_id=message.from_user.id)
    except:
        return await message.reply(f'‚ùó {user.link}, —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –º–∞–≥–∞–∑–∏–Ω–∞ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∞–º, —Å–æ—Å—Ç–æ—è—â–∏–º –≤ –∫–ª–∞–Ω–µ ‚òπ\n'
                                   '‚ñ∂Ô∏è –í–≤–µ–¥–∏ ¬´–ö–ª–∞–Ω—ã¬ª —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤!',
                                   disable_web_page_preview=True)
    try:
        clan_rob = ClanRob(clan_id=clanuser.clan_id)
    except:
        return await message.reply(f'‚ùó {user.link}, –ø–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ '
                                   f'—Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è '
                                   f'–æ–≥—Ä–∞–±–ª–µ–Ω–∏—è üëçüèª',
                                   disable_web_page_preview=True)
    if not clan_rob.prepare and clan_rob.time_rob:
        return await message.reply(f'‚ùó {user.link}, –ø–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ '
                                   f'—Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—é üëçüèª',
                                   disable_web_page_preview=True)
    if clan_rob.prepare and clan_rob.plan_rob == 0:
        return await message.reply(f'‚ùó {user.link}, –ø–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ '
                                   f'–ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–ª–∞–Ω–∞ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è üò©',
                                   disable_web_page_preview=True)
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[
        0].lower() else message.text.split()[2:]
    if message.chat.id == message.from_user.id and len(arg) == 0:
        await dialog_manager.start(Shop.LIST_PAGER, mode=StartMode.NEW_STACK, data={'clan_id': clanuser.clan_id})
    else:
        if len(arg) == 0:
            text = get_list_itemsforbuy(clan_rob.index_rob, clan_rob.plan_rob, user.id)
            return await message.reply(f'{user.link}, —Ç—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–∏: \n{text}\n'
                                       f'‚úÖ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´–®–æ–ø [–Ω–æ–º–µ—Ä]¬ª',
                                       disable_web_page_preview=True)

        if len(arg) >= 1 and arg[0].isdigit():
            try:
                item_id = int(arg[0])
                items = ItemsRob(item_id)
            except:
                text = get_list_itemsforbuy(clan_rob.index_rob, clan_rob.plan_rob, user.id)
                return await message.reply(f'{user.link}, —Ç—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–∏: \n{text}\n'
                                           f'‚úÖ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´–®–æ–ø [–Ω–æ–º–µ—Ä]¬ª',
                                           disable_web_page_preview=True)

            if user.balance < items.sell_price:
                return await message.reply(
                    f'üí≤ {user.link}, –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Ä—É–∫–∞—Ö, –Ω—É–∂–Ω–æ: {to_str4(items.sell_price)}',
                    disable_web_page_preview=True)
            count = items.get_item_count(user.id)
            if count and count >= 1:
                return await message.reply(f'‚ùå {user.link}, –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç',
                                           disable_web_page_preview=True)
            items.set_item_count(user.id, 1)
            user.edit('balance', user.balance - items.sell_price)

            await message.reply(f'üí≤ {user.link}, –í—ã –∫—É–ø–∏–ª–∏ {items.name} (x1) –∑–∞ {to_str4(items.sell_price)}',
                                disable_web_page_preview=True)
            if ItemsRob.check_allitems(user.id, name_robs[clan_rob.index_rob]['plan'][clan_rob.plan_rob]['subjects']):
                await message.reply(f"{user.link}, –≤—Å–µ —Ç—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∫—É–ø–ª–µ–Ω—ã! üòØ\n"
                                    "‚úÖ –í—ã –¥–æ–ø—É—â–µ–Ω—ã –∫ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—é, –æ–∂–∏–¥–∞–π—Ç–µ –∫–æ–Ω—Ü–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏.",
                                    disable_web_page_preview=True)
                clanuser.edit('rob_involved', True)
