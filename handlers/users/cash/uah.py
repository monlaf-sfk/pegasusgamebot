from aiogram import flags
from aiogram.types import Message
from filters.users import flood_handler
from config import bot_name
from keyboard.generate import show_balance_kb
from keyboard.cash import uah_kb, my_uah_kb
from utils.logs import writelog
from utils.main.cash import get_cash, to_str
from utils.main.db import sql
from utils.main.euro import Uah, uah_to_usd


@flags.throttling_key('default')
async def uah_handler(message: Message):
    flood = await flood_handler(message)
    if flood:
        arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[
            0].lower() else message.text.split()[2:]
        uah = Uah(owner=message.from_user.id)

        if len(arg) == 0:
            return await message.reply(uah.text, reply_markup=uah_kb.as_markup())
        elif arg[0].lower() in ['–∫—É–ø–∏—Ç—å', '–ø–æ–ø–æ–ª–Ω–∏—Ç—å']:
            if len(arg) < 2:
                return await message.reply('‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–Æ–∞–Ω—å –∫—É–ø–∏—Ç—å (–∫–æ–ª-–≤–æ)</code>',
                                           reply_markup=my_uah_kb.as_markup())
            try:
                xa = sql.execute(f'SELECT bank FROM users WHERE id = {message.from_user.id}', False, True)[0][0]
                summ = get_cash(arg[1]) if arg[1].lower() not in ['–≤—Å—ë', '–≤—Å–µ'] else int(xa / uah_to_usd(1))
                if summ <= 0:
                    raise Exception('123')
            except:
                return await message.reply('üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!')
            if (summ + uah.balance) > uah.spaciousness:
                return await message.reply('üö´ –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –≤–∞—à–µ–π –ö–ª–∞–¥–æ–≤–∫–∏!')
            user_summ = uah_to_usd(summ)

            if user_summ > xa:
                text = f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö, –Ω—É–∂–Ω–æ: {to_str(user_summ)}'
                if len(text) > 4095:
                    return await message.reply(f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö\n‚ôæ –ù—É–∂–Ω–æ: –û—á–µ–Ω—å –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥!',
                                               reply_markup=show_balance_kb.as_markup())
                return await message.reply(text,
                                           reply_markup=show_balance_kb.as_markup())

            sql.executescript(f'UPDATE uah SET balance = balance + {summ} WHERE owner = {message.from_user.id};\n'
                              f'UPDATE users SET bank = bank - {user_summ} WHERE id = {message.from_user.id};',
                              True, False)

            await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ {summ} –Æ–∞–Ω—å –∑–∞ {to_str(user_summ)}',
                                reply_markup=my_uah_kb.as_markup())
            await writelog(message.from_user.id, f'–Æ–∞–Ω—å +{summ} –∑–∞ {to_str(user_summ)}')
            # now = uah_price() + int(summ * random.choice([0.01, 0.05, 0.04, 0.03, 0]))

            # await set_uah_price(now)

            return

        elif arg[0].lower() in ['–ø—Ä–æ–¥–∞—Ç—å', '—Å–Ω—è—Ç—å', '–æ–±–º–µ–Ω—è—Ç—å']:
            try:
                if arg[1].isdigit():
                    summ = get_cash(arg[1])
                else:
                    raise Exception('123')
            except:
                summ = uah.balance
            if summ <= 0:
                return await message.reply('üò¥ –ö–æ–ª-–≤–æ –Æ–∞–Ω—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –Ω—É–ª—é!')
            elif summ > uah.balance:
                return await message.reply('üò¥ –ö–æ–ª-–≤–æ –Æ–∞–Ω—å –±–æ–ª—å—à–µ —á–µ–º –±–∞–ª–∞–Ω—Å–∞ –ö–ª–∞–¥–æ–≤–∫–∏!')

            # now = uah_price() - int(summ * 0.0005)

            # await set_uah_price(now)

            user_summ = uah_to_usd(summ)

            sql.executescript(f'UPDATE uah SET balance = balance - {summ} WHERE owner = {message.from_user.id};\n'
                              f'UPDATE users SET bank = bank + {user_summ} WHERE id = {message.from_user.id};',
                              True, False)

            await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ {to_str(user_summ)} —Å –ö–ª–∞–¥–æ–≤–∫–∏!',
                                reply_markup=my_uah_kb.as_markup())
            await writelog(message.from_user.id, f'–Æ–∞–Ω—å -{summ} –∑–∞ {to_str(user_summ)}')
            return
        elif arg[0].lower() in ['—É–ª—É—á—à', '—É–ª—É—á—à–∏—Ç—å']:
            xa = sql.execute(f'SELECT bank FROM users WHERE id = {message.from_user.id}', False, True)[0][0]
            price = 100000 * uah.level
            if xa < price:
                return await message.reply(f'üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è, –Ω—É–∂–Ω–æ: {to_str(price)}',
                                           reply_markup=my_uah_kb.as_markup())

            sql.executescript(f'UPDATE users SET bank = bank - {price} WHERE id = {message.from_user.id};\n'
                              f'UPDATE uah SET level = level + 1 WHERE owner = {message.from_user.id};')
            return await message.reply(
                f'ü•´ –í—ã —É–ª—É—á—à–∏–ª–∏ —Å–≤–æ—é –ö–ª–∞–¥–æ–≤–∫—É –Æ–∞–Ω—å –∏ —Ç–µ–ø–µ—Ä—å –æ–Ω –≤–º–µ—â–∞–µ—Ç: {to_str((uah.level + 1) * 1000)}',
                reply_markup=my_uah_kb.as_markup())
