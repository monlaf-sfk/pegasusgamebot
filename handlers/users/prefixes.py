from aiogram import flags
from aiogram.types import Message
from filters.users import flood_handler
from config import bot_name
from keyboard.generate import show_balance_kb
from keyboard.main import prefix_buy_kb
from utils.main.cash import to_str
from utils.main.prefixes import prefixes
from utils.main.users import User


@flags.throttling_key('default')
async def prefix_handler(message: Message):
    flood = await flood_handler(message)
    if flood:
        arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[
            0].lower() else message.text.split()[2:]

        if len(arg) == 0:
            text = f'üìÉ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã:\n' \
                   f'<i>–ù–æ–º–µ—Ä. –ù–∞–∑–≤–∞–Ω–∏–µ - —Ü–µ–Ω–∞</i>\n\n'
            for index, prefix in prefixes.items():
                text += f'<code>{index}</code>. <b>{prefix["name"]} {prefix["emoji"]}</b> - {to_str(prefix["price"])}\n'

            text += '\n\n–í–≤–µ–¥–∏—Ç–µ: <code>–ü—Ä–µ—Ñ–∏–∫—Å –∫—É–ø–∏—Ç—å (–Ω–æ–º–µ—Ä)</code>'

            return await message.reply(text, reply_markup=prefix_buy_kb.as_markup())

        elif arg[0].lower() in ['–∫—É–ø–∏—Ç—å', '–ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏', 'buy']:
            if len(arg) < 2:
                return await message.reply('‚ùå –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–æ–º–µ—Ä –ø—Ä–µ—Ñ–∏–∫—Å–∞!')
            elif int(arg[1]) < 1 or int(arg[1]) > len(prefixes):
                return await message.reply('‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–µ—Ñ–∏–∫—Å–∞!')

            user = User(user=message.from_user)

            prefix = prefixes[int(arg[1])]

            if user.balance < prefix['price']:
                return await message.reply(
                    f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏. –ù—É–∂–Ω–æ: {to_str(prefix["price"])}',
                    reply_markup=show_balance_kb.as_markup())
            elif user.donate:
                return await message.reply('‚ùå –≠—Ö... –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ–Ω–∞—Ç –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å!')

            user.set_prefix(prefix)

            return await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å <b>{prefix["name"]} {prefix["emoji"]}</b>',
                                       reply_markup=show_balance_kb.as_markup())

        else:
            return await message.reply('‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–ü—Ä–µ—Ñ–∏–∫—Å –∫—É–ø–∏—Ç—å (–Ω–æ–º–µ—Ä)</code>')
