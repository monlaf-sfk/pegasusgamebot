# -*- coding: utf-8 -*-
import random
import pymorphy2

# Initialize the morphological analyzer
morph = pymorphy2.MorphAnalyzer()


def generate_random_text():
    templates = [
        "üó®Ô∏è –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –¥—Ä—É–∑—å—è–º –æ–± —ç—Ç–æ–º {–ø—Ä–æ–º–æ–∫–æ–¥–µ|–∫–æ–¥–µ|—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏}, –∏ –ø–æ–ª—É—á–∏—Ç–µ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞! üí´",
        "üó®Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç—Ç–∏–º {–ø—Ä–æ–º–æ–∫–æ–¥–æ–º|–∫–æ–¥–æ–º|–∫—É–ø–æ–Ω–æ–º|–±–æ–Ω—É—Å–æ–º} —Å {—Å–µ–º—å–µ–π|–¥—Ä—É–∑—å—è–º–∏|–±–ª–∏–∑–∫–∏–º–∏|–∑–Ω–∞–∫–æ–º—ã–º–∏}, –∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —à–∞–Ω—Å —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å—ã! üí´",
        "üó®Ô∏è –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –≤—Å–µ–º –æ–± —ç—Ç–æ–º {–ø—Ä–æ–º–æ–∫–æ–¥–µ|–∫–æ–¥–µ|—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏}, –∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞! üí´",
        "üó®Ô∏è –†–∞–∑–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º {–ø—Ä–æ–º–æ–∫–æ–¥–æ–º|–∫–æ–¥–æ–º|–∫—É–ø–æ–Ω–æ–º} —Å {–¥—Ä—É–∑—å—è–º–∏|–±–ª–∏–∑–∫–∏–º–∏|–ø–æ–¥—Ä—É–≥–∞–º–∏|–∫–æ–ª–ª–µ–≥–∞–º–∏}, –∏ –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª! üí´",
        "üó®Ô∏è –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ {–ø—Ä–æ–º–æ-–∫–æ–¥|–∫—É–ø–æ–Ω|—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ}, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å {–±–ª–∏–∑–∫–∏–º–∏|–¥—Ä—É–∑—å—è–º–∏|—Ä–æ–¥–Ω—ã–º–∏}, –∏ —É –≤–∞—Å –ø–æ—è–≤–∏—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —à–∞–Ω—Å —É–≤–µ–ª–∏—á–∏—Ç—å —Å–≤–æ–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è! üí´",
        "üó®Ô∏è –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ {–ø—Ä–æ–º–æ–∫–æ–¥–µ|–∫–æ–¥–µ|—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏} —Å–≤–æ–∏–º {–∫–æ–ª–ª–µ–≥–∞–º|–∑–Ω–∞–∫–æ–º—ã–º|–ø–æ–¥—Ä—É–≥–∞–º}, –∏ –æ–Ω–∏ —Ç–∞–∫–∂–µ —Å–º–æ–≥—É—Ç –≤–æ–ª—à–µ–±–Ω—ã–º –æ–±—Ä–∞–∑–æ–º —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å—ã! üí´",
        # Add more templates with alternatives...
    ]
    template = random.choice(templates)
    while '{' in template:
        start = template.find('{')
        end = template.find('}')
        options = template[start + 1:end].split('|')
        chosen_option = random.choice(options)
        template = template[:start] + chosen_option + template[end + 1:]
    return template
